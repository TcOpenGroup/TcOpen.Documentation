### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  commentId: T:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  id: MongoDbRepositorySettings`1
  parent: TcOpen.Inxton.MongoDb
  children:
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._collectionName
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._databaseName
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Clients
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collections
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Databases
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection(System.String)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes(System.Type,System.Collections.Generic.List{System.Type})
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase(System.String)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen(System.String,System.Int32,System.TimeSpan)
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping
  - TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability
  langs:
  - csharp
  - vb
  name: MongoDbRepositorySettings<T>
  nameWithType: MongoDbRepositorySettings<T>
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>
  type: Class
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: MongoDbRepositorySettings
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 14
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: 'public class MongoDbRepositorySettings<T> : RepositorySettings where T : IBrowsableDataObject'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class MongoDbRepositorySettings(Of T As IBrowsableDataObject)

          Inherits RepositorySettings
  inheritance:
  - System.Object
  - TcOpen.Inxton.Data.RepositorySettings
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: MongoDbRepositorySettings(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T)
  name.vb: MongoDbRepositorySettings(Of T)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._databaseName
  commentId: F:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._databaseName
  id: _databaseName
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: _databaseName
  nameWithType: MongoDbRepositorySettings<T>._databaseName
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>._databaseName
  type: Field
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: _databaseName
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 16
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: string _databaseName
    return:
      type: System.String
    content.vb: _databaseName As String
  nameWithType.vb: MongoDbRepositorySettings(Of T)._databaseName
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T)._databaseName
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._collectionName
  commentId: F:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1._collectionName
  id: _collectionName
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: _collectionName
  nameWithType: MongoDbRepositorySettings<T>._collectionName
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>._collectionName
  type: Field
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: _collectionName
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 17
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: string _collectionName
    return:
      type: System.String
    content.vb: _collectionName As String
  nameWithType.vb: MongoDbRepositorySettings(Of T)._collectionName
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T)._collectionName
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: MongoDbRepositorySettings(String, String, String)
  nameWithType: MongoDbRepositorySettings<T>.MongoDbRepositorySettings(String, String, String)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.MongoDbRepositorySettings(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: .ctor
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 19
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: >-
      [Obsolete("It's not recommended to use MongoDB without any authentication in place.", false)]

      public MongoDbRepositorySettings(string connectionString, string databaseName, string collectionName)
    parameters:
    - id: connectionString
      type: System.String
    - id: databaseName
      type: System.String
    - id: collectionName
      type: System.String
    content.vb: >-
      <Obsolete("It's not recommended to use MongoDB without any authentication in place.", False)>

      Public Sub New(connectionString As String, databaseName As String, collectionName As String)
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: It's not recommended to use MongoDB without any authentication in place.
    - type: System.Boolean
      value: false
  nameWithType.vb: MongoDbRepositorySettings(Of T).MongoDbRepositorySettings(String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).MongoDbRepositorySettings(System.String, System.String, System.String)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor(System.String,System.String,System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  id: '#ctor(System.String,System.String,System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)'
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: MongoDbRepositorySettings(String, String, String, MongoDbCredentials)
  nameWithType: MongoDbRepositorySettings<T>.MongoDbRepositorySettings(String, String, String, MongoDbCredentials)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.MongoDbRepositorySettings(System.String, System.String, System.String, TcOpen.Inxton.MongoDb.MongoDbCredentials)
  type: Constructor
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: .ctor
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 28
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public MongoDbRepositorySettings(string connectionString, string databaseName, string collectionName, MongoDbCredentials credentials)
    parameters:
    - id: connectionString
      type: System.String
    - id: databaseName
      type: System.String
    - id: collectionName
      type: System.String
    - id: credentials
      type: TcOpen.Inxton.MongoDb.MongoDbCredentials
    content.vb: Public Sub New(connectionString As String, databaseName As String, collectionName As String, credentials As MongoDbCredentials)
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor*
  nameWithType.vb: MongoDbRepositorySettings(Of T).MongoDbRepositorySettings(String, String, String, MongoDbCredentials)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).MongoDbRepositorySettings(System.String, System.String, System.String, TcOpen.Inxton.MongoDb.MongoDbCredentials)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String)
  id: GetClient(System.String)
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetClient(String)
  nameWithType: MongoDbRepositorySettings<T>.GetClient(String)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetClient(System.String)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetClient
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 36
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: IMongoClient GetClient(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    return:
      type: MongoDB.Driver.IMongoClient
    content.vb: Function GetClient(connectionString As String) As IMongoClient
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetClient(String)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetClient(System.String)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient(System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  id: GetClient(System.String,TcOpen.Inxton.MongoDb.MongoDbCredentials)
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetClient(String, MongoDbCredentials)
  nameWithType: MongoDbRepositorySettings<T>.GetClient(String, MongoDbCredentials)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetClient(System.String, TcOpen.Inxton.MongoDb.MongoDbCredentials)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetClient
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 51
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: IMongoClient GetClient(string connectionString, MongoDbCredentials dbCredentials)
    parameters:
    - id: connectionString
      type: System.String
    - id: dbCredentials
      type: TcOpen.Inxton.MongoDb.MongoDbCredentials
    return:
      type: MongoDB.Driver.IMongoClient
    content.vb: Function GetClient(connectionString As String, dbCredentials As MongoDbCredentials) As IMongoClient
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetClient(String, MongoDbCredentials)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetClient(System.String, TcOpen.Inxton.MongoDb.MongoDbCredentials)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase(System.String)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase(System.String)
  id: GetDatabase(System.String)
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetDatabase(String)
  nameWithType: MongoDbRepositorySettings<T>.GetDatabase(String)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetDatabase
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 67
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: IMongoDatabase GetDatabase(string databaseName)
    parameters:
    - id: databaseName
      type: System.String
    return:
      type: MongoDB.Driver.IMongoDatabase
    content.vb: Function GetDatabase(databaseName As String) As IMongoDatabase
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetDatabase(String)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetDatabase(System.String)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection(System.String)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection(System.String)
  id: GetCollection(System.String)
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetCollection(String)
  nameWithType: MongoDbRepositorySettings<T>.GetCollection(String)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetCollection(System.String)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetCollection
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 82
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: IMongoCollection<T> GetCollection(string collectionName)
    parameters:
    - id: collectionName
      type: System.String
    return:
      type: MongoDB.Driver.IMongoCollection{{T}}
    content.vb: Function GetCollection(collectionName As String) As IMongoCollection(Of T)
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetCollection(String)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetCollection(System.String)
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Clients
  commentId: F:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Clients
  id: Clients
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: MongoDbRepositorySettings<T>.Clients
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Clients
  type: Field
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Clients
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 98
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: static Dictionary<string, IMongoClient> Clients
    return:
      type: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoClient}
    content.vb: Shared Clients As Dictionary(Of String, IMongoClient)
  nameWithType.vb: MongoDbRepositorySettings(Of T).Clients
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Clients
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Databases
  commentId: F:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Databases
  id: Databases
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Databases
  nameWithType: MongoDbRepositorySettings<T>.Databases
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Databases
  type: Field
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Databases
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 99
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: static Dictionary<string, IMongoDatabase> Databases
    return:
      type: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoDatabase}
    content.vb: Shared Databases As Dictionary(Of String, IMongoDatabase)
  nameWithType.vb: MongoDbRepositorySettings(Of T).Databases
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Databases
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collections
  commentId: F:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collections
  id: Collections
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Collections
  nameWithType: MongoDbRepositorySettings<T>.Collections
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Collections
  type: Field
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Collections
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 100
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: static Dictionary<string, IMongoCollection<T>> Collections
    return:
      type: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoCollection{{T}}}
    content.vb: Shared Collections As Dictionary(Of String, IMongoCollection(Of T))
  nameWithType.vb: MongoDbRepositorySettings(Of T).Collections
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Collections
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes(System.Type,System.Collections.Generic.List{System.Type})
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes(System.Type,System.Collections.Generic.List{System.Type})
  id: GetContainingTypes(System.Type,System.Collections.Generic.List{System.Type})
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetContainingTypes(Type, List<Type>)
  nameWithType: MongoDbRepositorySettings<T>.GetContainingTypes(Type, List<Type>)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetContainingTypes(System.Type, System.Collections.Generic.List<System.Type>)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetContainingTypes
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 102
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: static IEnumerable<Type> GetContainingTypes(Type RootType, List<Type> types = null)
    parameters:
    - id: RootType
      type: System.Type
    - id: types
      type: System.Collections.Generic.List{System.Type}
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Shared Function GetContainingTypes(RootType As Type, types As List(Of Type) = Nothing) As IEnumerable(Of Type)
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetContainingTypes(Type, List(Of Type))
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetContainingTypes(System.Type, System.Collections.Generic.List(Of System.Type))
  name.vb: GetContainingTypes(Type, List(Of Type))
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping
  id: SetupSerialisationAndMapping
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: SetupSerialisationAndMapping()
  nameWithType: MongoDbRepositorySettings<T>.SetupSerialisationAndMapping()
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.SetupSerialisationAndMapping()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: SetupSerialisationAndMapping
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 124
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: static void SetupSerialisationAndMapping()
    content.vb: Shared Sub SetupSerialisationAndMapping
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping*
  nameWithType.vb: MongoDbRepositorySettings(Of T).SetupSerialisationAndMapping()
  modifiers.csharp:
  - static
  modifiers.vb:
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).SetupSerialisationAndMapping()
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client
  commentId: P:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client
  id: Client
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: MongoDbRepositorySettings<T>.Client
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Client
  type: Property
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Client
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 164
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public IMongoClient Client { get; }
    parameters: []
    return:
      type: MongoDB.Driver.IMongoClient
    content.vb: Public ReadOnly Property Client As IMongoClient
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client*
  nameWithType.vb: MongoDbRepositorySettings(Of T).Client
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Client
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database
  commentId: P:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database
  id: Database
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: MongoDbRepositorySettings<T>.Database
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Database
  type: Property
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Database
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 165
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public IMongoDatabase Database { get; }
    parameters: []
    return:
      type: MongoDB.Driver.IMongoDatabase
    content.vb: Public ReadOnly Property Database As IMongoDatabase
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database*
  nameWithType.vb: MongoDbRepositorySettings(Of T).Database
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Database
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection
  commentId: P:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection
  id: Collection
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: Collection
  nameWithType: MongoDbRepositorySettings<T>.Collection
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Collection
  type: Property
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Collection
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 166
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public IMongoCollection<T> Collection { get; }
    parameters: []
    return:
      type: MongoDB.Driver.IMongoCollection{{T}}
    content.vb: Public ReadOnly Property Collection As IMongoCollection(Of T)
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection*
  nameWithType.vb: MongoDbRepositorySettings(Of T).Collection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Collection
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo
  id: GetConnectionInfo
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: GetConnectionInfo()
  nameWithType: MongoDbRepositorySettings<T>.GetConnectionInfo()
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetConnectionInfo()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetConnectionInfo
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 168
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public string GetConnectionInfo()
    return:
      type: System.String
    content.vb: Public Function GetConnectionInfo As String
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo*
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetConnectionInfo()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetConnectionInfo()
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability
  id: WaitForMongoServerAvailability
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: WaitForMongoServerAvailability()
  nameWithType: MongoDbRepositorySettings<T>.WaitForMongoServerAvailability()
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.WaitForMongoServerAvailability()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: WaitForMongoServerAvailability
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 173
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public void WaitForMongoServerAvailability()
    content.vb: Public Sub WaitForMongoServerAvailability
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability*
  nameWithType.vb: MongoDbRepositorySettings(Of T).WaitForMongoServerAvailability()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).WaitForMongoServerAvailability()
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen(System.String,System.Int32,System.TimeSpan)
  commentId: M:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen(System.String,System.Int32,System.TimeSpan)
  id: IsPortOpen(System.String,System.Int32,System.TimeSpan)
  parent: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  langs:
  - csharp
  - vb
  name: IsPortOpen(String, Int32, TimeSpan)
  nameWithType: MongoDbRepositorySettings<T>.IsPortOpen(String, Int32, TimeSpan)
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.IsPortOpen(System.String, System.Int32, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: IsPortOpen
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/Mongo/MongoDbRepositorySettings.cs
    startLine: 188
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: bool IsPortOpen(string host, int port, TimeSpan timeout)
    parameters:
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Boolean
    content.vb: Function IsPortOpen(host As String, port As Integer, timeout As TimeSpan) As Boolean
  overload: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen*
  nameWithType.vb: MongoDbRepositorySettings(Of T).IsPortOpen(String, Int32, TimeSpan)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).IsPortOpen(System.String, System.Int32, System.TimeSpan)
references:
- uid: TcOpen.Inxton.MongoDb
  commentId: N:TcOpen.Inxton.MongoDb
  name: TcOpen.Inxton.MongoDb
  nameWithType: TcOpen.Inxton.MongoDb
  fullName: TcOpen.Inxton.MongoDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TcOpen.Inxton.Data.RepositorySettings
  commentId: T:TcOpen.Inxton.Data.RepositorySettings
  parent: TcOpen.Inxton.Data
  name: RepositorySettings
  nameWithType: RepositorySettings
  fullName: TcOpen.Inxton.Data.RepositorySettings
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.Data
  commentId: N:TcOpen.Inxton.Data
  name: TcOpen.Inxton.Data
  nameWithType: TcOpen.Inxton.Data
  fullName: TcOpen.Inxton.Data
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.#ctor
  name: MongoDbRepositorySettings
  nameWithType: MongoDbRepositorySettings<T>.MongoDbRepositorySettings
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.MongoDbRepositorySettings
  nameWithType.vb: MongoDbRepositorySettings(Of T).MongoDbRepositorySettings
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).MongoDbRepositorySettings
- uid: TcOpen.Inxton.MongoDb.MongoDbCredentials
  commentId: T:TcOpen.Inxton.MongoDb.MongoDbCredentials
  parent: TcOpen.Inxton.MongoDb
  name: MongoDbCredentials
  nameWithType: MongoDbCredentials
  fullName: TcOpen.Inxton.MongoDb.MongoDbCredentials
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetClient
  name: GetClient
  nameWithType: MongoDbRepositorySettings<T>.GetClient
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetClient
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetClient
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetClient
- uid: MongoDB.Driver.IMongoClient
  commentId: T:MongoDB.Driver.IMongoClient
  parent: MongoDB.Driver
  isExternal: true
  name: IMongoClient
  nameWithType: IMongoClient
  fullName: MongoDB.Driver.IMongoClient
- uid: MongoDB.Driver
  commentId: N:MongoDB.Driver
  isExternal: true
  name: MongoDB.Driver
  nameWithType: MongoDB.Driver
  fullName: MongoDB.Driver
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetDatabase
  name: GetDatabase
  nameWithType: MongoDbRepositorySettings<T>.GetDatabase
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetDatabase
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetDatabase
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetDatabase
- uid: MongoDB.Driver.IMongoDatabase
  commentId: T:MongoDB.Driver.IMongoDatabase
  parent: MongoDB.Driver
  isExternal: true
  name: IMongoDatabase
  nameWithType: IMongoDatabase
  fullName: MongoDB.Driver.IMongoDatabase
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetCollection
  name: GetCollection
  nameWithType: MongoDbRepositorySettings<T>.GetCollection
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetCollection
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetCollection
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetCollection
- uid: MongoDB.Driver.IMongoCollection{{T}}
  commentId: T:MongoDB.Driver.IMongoCollection{`0}
  parent: MongoDB.Driver
  definition: MongoDB.Driver.IMongoCollection`1
  name: IMongoCollection<T>
  nameWithType: IMongoCollection<T>
  fullName: MongoDB.Driver.IMongoCollection<T>
  nameWithType.vb: IMongoCollection(Of T)
  fullName.vb: MongoDB.Driver.IMongoCollection(Of T)
  name.vb: IMongoCollection(Of T)
  spec.csharp:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MongoDB.Driver.IMongoCollection`1
  commentId: T:MongoDB.Driver.IMongoCollection`1
  isExternal: true
  name: IMongoCollection<TDocument>
  nameWithType: IMongoCollection<TDocument>
  fullName: MongoDB.Driver.IMongoCollection<TDocument>
  nameWithType.vb: IMongoCollection(Of TDocument)
  fullName.vb: MongoDB.Driver.IMongoCollection(Of TDocument)
  name.vb: IMongoCollection(Of TDocument)
  spec.csharp:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDocument
    nameWithType: TDocument
    fullName: TDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoClient}
  commentId: T:System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoClient}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IMongoClient>
  nameWithType: Dictionary<String, IMongoClient>
  fullName: System.Collections.Generic.Dictionary<System.String, MongoDB.Driver.IMongoClient>
  nameWithType.vb: Dictionary(Of String, IMongoClient)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, MongoDB.Driver.IMongoClient)
  name.vb: Dictionary(Of String, IMongoClient)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoClient
    name: IMongoClient
    nameWithType: IMongoClient
    fullName: MongoDB.Driver.IMongoClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoClient
    name: IMongoClient
    nameWithType: IMongoClient
    fullName: MongoDB.Driver.IMongoClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoDatabase}
  commentId: T:System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoDatabase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IMongoDatabase>
  nameWithType: Dictionary<String, IMongoDatabase>
  fullName: System.Collections.Generic.Dictionary<System.String, MongoDB.Driver.IMongoDatabase>
  nameWithType.vb: Dictionary(Of String, IMongoDatabase)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, MongoDB.Driver.IMongoDatabase)
  name.vb: Dictionary(Of String, IMongoDatabase)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoDatabase
    name: IMongoDatabase
    nameWithType: IMongoDatabase
    fullName: MongoDB.Driver.IMongoDatabase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoDatabase
    name: IMongoDatabase
    nameWithType: IMongoDatabase
    fullName: MongoDB.Driver.IMongoDatabase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoCollection{{T}}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,MongoDB.Driver.IMongoCollection{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IMongoCollection<T>>
  nameWithType: Dictionary<String, IMongoCollection<T>>
  fullName: System.Collections.Generic.Dictionary<System.String, MongoDB.Driver.IMongoCollection<T>>
  nameWithType.vb: Dictionary(Of String, IMongoCollection(Of T))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, MongoDB.Driver.IMongoCollection(Of T))
  name.vb: Dictionary(Of String, IMongoCollection(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MongoDB.Driver.IMongoCollection`1
    name: IMongoCollection
    nameWithType: IMongoCollection
    fullName: MongoDB.Driver.IMongoCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetContainingTypes
  name: GetContainingTypes
  nameWithType: MongoDbRepositorySettings<T>.GetContainingTypes
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetContainingTypes
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetContainingTypes
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetContainingTypes
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.SetupSerialisationAndMapping
  name: SetupSerialisationAndMapping
  nameWithType: MongoDbRepositorySettings<T>.SetupSerialisationAndMapping
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.SetupSerialisationAndMapping
  nameWithType.vb: MongoDbRepositorySettings(Of T).SetupSerialisationAndMapping
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).SetupSerialisationAndMapping
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Client
  name: Client
  nameWithType: MongoDbRepositorySettings<T>.Client
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Client
  nameWithType.vb: MongoDbRepositorySettings(Of T).Client
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Client
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Database
  name: Database
  nameWithType: MongoDbRepositorySettings<T>.Database
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Database
  nameWithType.vb: MongoDbRepositorySettings(Of T).Database
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Database
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.Collection
  name: Collection
  nameWithType: MongoDbRepositorySettings<T>.Collection
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.Collection
  nameWithType.vb: MongoDbRepositorySettings(Of T).Collection
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).Collection
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.GetConnectionInfo
  name: GetConnectionInfo
  nameWithType: MongoDbRepositorySettings<T>.GetConnectionInfo
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.GetConnectionInfo
  nameWithType.vb: MongoDbRepositorySettings(Of T).GetConnectionInfo
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).GetConnectionInfo
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.WaitForMongoServerAvailability
  name: WaitForMongoServerAvailability
  nameWithType: MongoDbRepositorySettings<T>.WaitForMongoServerAvailability
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.WaitForMongoServerAvailability
  nameWithType.vb: MongoDbRepositorySettings(Of T).WaitForMongoServerAvailability
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).WaitForMongoServerAvailability
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen*
  commentId: Overload:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1.IsPortOpen
  name: IsPortOpen
  nameWithType: MongoDbRepositorySettings<T>.IsPortOpen
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>.IsPortOpen
  nameWithType.vb: MongoDbRepositorySettings(Of T).IsPortOpen
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T).IsPortOpen
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
