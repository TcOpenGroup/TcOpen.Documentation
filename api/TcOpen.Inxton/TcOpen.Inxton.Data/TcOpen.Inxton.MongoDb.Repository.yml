### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.MongoDb.Repository
  commentId: T:TcOpen.Inxton.MongoDb.Repository
  id: Repository
  parent: TcOpen.Inxton.MongoDb
  children:
  - TcOpen.Inxton.MongoDb.Repository.Factory``1(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{``0})
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: Repository
  fullName: TcOpen.Inxton.MongoDb.Repository
  type: Class
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/RepositoryExtensions.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Repository
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/RepositoryExtensions.cs
    startLine: 5
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: public static class Repository
    content.vb: Public Module Repository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TcOpen.Inxton.MongoDb.Repository.Factory``1(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{``0})
  commentId: M:TcOpen.Inxton.MongoDb.Repository.Factory``1(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{``0})
  id: Factory``1(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{``0})
  parent: TcOpen.Inxton.MongoDb.Repository
  langs:
  - csharp
  - vb
  name: Factory<T>(MongoDbRepositorySettings<T>)
  nameWithType: Repository.Factory<T>(MongoDbRepositorySettings<T>)
  fullName: TcOpen.Inxton.MongoDb.Repository.Factory<T>(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Repository/MongoDb/RepositoryExtensions.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Factory
    path: ../TcOpen/src/TcoData/src/Repository/MongoDb/RepositoryExtensions.cs
    startLine: 7
  assemblies:
  - TcOpen.Inxton.MongoDb
  namespace: TcOpen.Inxton.MongoDb
  syntax:
    content: >-
      public static IRepository<T> Factory<T>(MongoDbRepositorySettings<T> parameters)

          where T : IBrowsableDataObject
    parameters:
    - id: parameters
      type: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{{T}}
    typeParameters:
    - id: T
    return:
      type: TcOpen.Inxton.Abstractions.Data.IRepository{{T}}
    content.vb: Public Shared Function Factory(Of T As IBrowsableDataObject)(parameters As MongoDbRepositorySettings(Of T)) As IRepository(Of T)
  overload: TcOpen.Inxton.MongoDb.Repository.Factory*
  nameWithType.vb: Repository.Factory(Of T)(MongoDbRepositorySettings(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcOpen.Inxton.MongoDb.Repository.Factory(Of T)(TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T))
  name.vb: Factory(Of T)(MongoDbRepositorySettings(Of T))
references:
- uid: TcOpen.Inxton.MongoDb
  commentId: N:TcOpen.Inxton.MongoDb
  name: TcOpen.Inxton.MongoDb
  nameWithType: TcOpen.Inxton.MongoDb
  fullName: TcOpen.Inxton.MongoDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.MongoDb.Repository.Factory*
  commentId: Overload:TcOpen.Inxton.MongoDb.Repository.Factory
  name: Factory
  nameWithType: Repository.Factory
  fullName: TcOpen.Inxton.MongoDb.Repository.Factory
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{{T}}
  commentId: T:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings{`0}
  parent: TcOpen.Inxton.MongoDb
  definition: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  name: MongoDbRepositorySettings<T>
  nameWithType: MongoDbRepositorySettings<T>
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>
  nameWithType.vb: MongoDbRepositorySettings(Of T)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T)
  name.vb: MongoDbRepositorySettings(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
    name: MongoDbRepositorySettings
    nameWithType: MongoDbRepositorySettings
    fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
    name: MongoDbRepositorySettings
    nameWithType: MongoDbRepositorySettings
    fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Abstractions.Data.IRepository{{T}}
  commentId: T:TcOpen.Inxton.Abstractions.Data.IRepository{`0}
  parent: TcOpen.Inxton.Abstractions.Data
  definition: TcOpen.Inxton.Abstractions.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Abstractions.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Abstractions.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Abstractions.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Abstractions.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Abstractions.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Abstractions.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  commentId: T:TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
  name: MongoDbRepositorySettings<T>
  nameWithType: MongoDbRepositorySettings<T>
  fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings<T>
  nameWithType.vb: MongoDbRepositorySettings(Of T)
  fullName.vb: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings(Of T)
  name.vb: MongoDbRepositorySettings(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
    name: MongoDbRepositorySettings
    nameWithType: MongoDbRepositorySettings
    fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings`1
    name: MongoDbRepositorySettings
    nameWithType: MongoDbRepositorySettings
    fullName: TcOpen.Inxton.MongoDb.MongoDbRepositorySettings
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Abstractions.Data.IRepository`1
  commentId: T:TcOpen.Inxton.Abstractions.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Abstractions.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Abstractions.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Abstractions.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Abstractions.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Abstractions.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Abstractions.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Abstractions.Data
  commentId: N:TcOpen.Inxton.Abstractions.Data
  name: TcOpen.Inxton.Abstractions.Data
  nameWithType: TcOpen.Inxton.Abstractions.Data
  fullName: TcOpen.Inxton.Abstractions.Data
